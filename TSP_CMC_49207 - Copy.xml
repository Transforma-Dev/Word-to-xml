<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="style/jpub3-html-trans.xsl"?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.0 20120330//EN" "D:/Localserver/Apache/htdocs/Transforma/ce_editor/Conversion/Word2HTML/DTD/jats-publishing-dtd-1.0/JATS-journalpublishing1.dtd">
<article article-type="research-article" dtd-version="1.0" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
 <front>
  <journal-meta>
   <journal-id journal-id-type="pmc">
    CMC
   </journal-id>
   <journal-id journal-id-type="nlm-ta">
    CMC
   </journal-id>
   <journal-id journal-id-type="publisher-id">
    CMC
   </journal-id>
   <journal-title-group>
    <journal-title>
     Computers, Materials &amp; Continua
    </journal-title>
   </journal-title-group>
   <issn pub-type="epub">
    1546-2226
   </issn>
   <publiher>
    <publisher-name>
     Tech Science Press
    </publisher-name>
    <publisher-loc>
     USA
    </publisher-loc>
   </publiher>
  </journal-meta>
  <article-meta>
   <article-id pub-id-type="publisher-id">
    49207
   </article-id>
   <article-id pub-id-type="doi">
    10.32604/cmc.2024.49207
   </article-id>
   <article-categories>
    <subj-group subj-group-type="heading">
     <subject>
      RESEARCH ARTICLE
     </subject>
    </subj-group>
   </article-categories>
   <title-group>
    <article-title>
     The Impact of Network Topologies and Radio Duty Cycle Mechanisms on the RPL Routing Protocol Power Consumption
    </article-title>
    <alt-title alt-title-type="left-running-head">
     Amoako and Otchere
    </alt-title>
    <alt-title alt-title-type="right-running-head">
     Inevitability of Politics in Ghana’s Curriculum Development
    </alt-title>
   </title-group>
   <contrib-group content-type="authors">
    <contrib contrib-type="author" corresp="yes" id="author-1">
     <contrib-id contrib-id-type="orcid">
      https:
     </contrib-id>
     <name name-style="western">
      <surname>
       Hkiri
      </surname>
      <given-names>
       Amal
      </given-names>
     </name>
     <xref ref-type="aff" rid="aff-1">
      1
     </xref>
     <email>
      ssss@email.com
     </email>
    </contrib>
    <contrib contrib-type="author" id="author-2">
     <contrib-id contrib-id-type="orcid">
      https:
     </contrib-id>
     <name name-style="western">
      <surname>
       Faraj
      </surname>
      <given-names>
       Hamzah
      </given-names>
     </name>
     <xref ref-type="aff" rid="aff-2">
      2
     </xref>
    </contrib>
    <contrib contrib-type="author" id="author-3">
     <contrib-id contrib-id-type="orcid">
      https:
     </contrib-id>
     <name name-style="western">
      <surname>
       Bahri
      </surname>
      <given-names>
       Omar Ben
      </given-names>
     </name>
     <xref ref-type="aff" rid="aff-2">
      2
     </xref>
    </contrib>
    <contrib contrib-type="author" id="author-4">
     <contrib-id contrib-id-type="orcid">
      https:
     </contrib-id>
     <name name-style="western">
      <surname>
       Karmani
      </surname>
      <given-names>
       Mouna
      </given-names>
     </name>
     <xref ref-type="aff" rid="aff-1">
      1
     </xref>
    </contrib>
    <contrib contrib-type="author" id="author-5">
     <contrib-id contrib-id-type="orcid">
      https:
     </contrib-id>
     <name name-style="western">
      <surname>
       Alqurashi
      </surname>
      <given-names>
       Sami
      </given-names>
     </name>
     <xref ref-type="aff" rid="aff-2">
      2
     </xref>
    </contrib>
    <contrib contrib-type="author" id="author-6">
     <contrib-id contrib-id-type="orcid">
      https:
     </contrib-id>
     <name name-style="western">
      <surname>
       Machhout
      </surname>
      <given-names>
       Mohsen
      </given-names>
     </name>
     <xref ref-type="aff" rid="aff-1">
      1
     </xref>
    </contrib>
    <aff id="aff-1">
     <label>
      1
     </label>
     <institution>
      Physic Department  Electronics and Micro-Electronics Laboratory  Faculty of Sciences of Monastir  Monastir  5000
     </institution>
     ,
     <country>
      Tunisia
     </country>
     .
    </aff>
    <aff id="aff-2">
     <label>
      2
     </label>
     <institution>
      Department of Science and Technology  College of Ranyah  Taif University  P.O. Box 11099  Taif  21944
     </institution>
     ,
     <country>
      Saudi Arabia
     </country>
     .
    </aff>
   </contrib-group>
   <author-notes>
    <corresp id="cor1">
     *Corresponding Author: Amal Hkiri. Email:
     <email>
      hkiriamalfsm@gmail.com
     </email>
    </corresp>
   </author-notes>
   <pub-date date-type="pub" iso-8601-date="2024-00-00" pub-type="epub">
    <day>
     00
    </day>
    <month>
     00
    </month>
    <year>
     2024
    </year>
   </pub-date>
   <volume>
    1
   </volume>
   <issue>
    1
   </issue>
   <fpage>
    1
   </fpage>
   <lpage>
    XX
   </lpage>
   <history>
    <date date-type="received">
     <day>
      00
     </day>
     <month>
      0
     </month>
     <year>
      2024
     </year>
    </date>
    <date date-type="accepted">
     <day>
      00
     </day>
     <month>
      0
     </month>
     <year>
      2024
     </year>
    </date>
   </history>
   <permissions>
    <copyright-statement>
     © 2024
    </copyright-statement>
    <copyright-year>
     2024
    </copyright-year>
    <copyright-holder>
     et al.
    </copyright-holder>
    <license xlink:href="https://creativecommons.org/licenses/by/4.0/">
     <license-p>
      This is an open access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original source is cited.
     </license-p>
    </license>
   </permissions>
   <self-uri content-type="pdf" xlink:href="TSP_CMC_49207 - Copy.pdf"/>
   <abstract abstract-type="abstract">
    <p>
     The Internet of Things (IoT) has witnessed a significant surge in adoption, particularly through the utilization of Wireless Sensor Networks (WSNs), which comprise small internet-connected devices. These deployments span various environments and offer a multitude of benefits. However, the widespread use of battery-powered devices introduces challenges due to their limited hardware resources and communication capabilities. In response to this, the Internet Engineering Task Force (IETF) has developed the IPv6 Routing Protocol for Low-power and Lossy Networks (RPL) to address the unique requirements of such networks. Recognizing the critical role of RPL in maintaining high performance, this paper proposes a novel approach to optimizing power consumption. Specifically, it introduces a developed sensor motes topology integrated with a Radio Duty Cycling (RDC) mechanism aimed at minimizing power usage. Through rigorous analysis, the paper evaluates the power efficiency of this approach through several simulations conducted across different network topologies, including random, linear, tree, and elliptical topologies. Additionally, three distinct RDC mechanisms—CXMAC, ContikiMAC, and NullRDC—are investigated to assess their impact on power consumption. The findings of the study, based on a comprehensive and deep analysis of the simulated results, highlight the efficiency of ContikiMAC in power conservation. This research contributes valuable insights into enhancing the energy efficiency of RPL-based IoT networks, ultimately facilitating their widespread deployment and usability in diverse environments.
    </p>
   </abstract>
   <kwd-group kwd-group-type="author">
    <kwd>
     WSN
    </kwd>
    <kwd>
     IoT
    </kwd>
    <kwd>
     radio duty cycles
    </kwd>
    <kwd>
     topologies
    </kwd>
   </kwd-group>
  </article-meta>
 </front>
 <body>
  <sec id="s1">
   <label>
    1
   </label>
   <title>
    Introduction
   </title>
   <p>
    Due to the Internet of Things (IoT) technology, the number of Internet-connected objects rises every day. The trend with this new paradigm, where smart embedded devices, people, and systems are connected, is that over the next few years, we could see a shift in the notion of what it means to be on the Internet. In this context, Wireless Sensor Network (WSN) technology is an essential component of IoT. It can be defined as a network of nodes that sense and collaboratively control the surrounding environment and enable interaction between people or computers and the IoT environment [1]. Deploying IoT technology using WSNs brings numerous benefits across various environments. In smart agriculture, WSNs enable precision farming by monitoring soil conditions and livestock health, leading to optimized irrigation, fertilization, and disease detection. In smart cities, WSNs facilitate traffic management through real-time data collection on traffic flow and environmental monitoring for pollution control. Healthcare applications leverage WSNs for remote patient monitoring and hospital asset tracking, enhancing patient care and resource utilization. In industrial automation, WSNs enable predictive maintenance by monitoring equipment performance and energy management to optimize energy consumption [2]. These benefits are realized through the integration of IoT devices with data analytics platforms, enabling stakeholders to make informed decisions and optimize operations.
   </p>
   <p>
    A WSN consists of sensor nodes, gateways, and clients. Many sensor nodes are randomly spread within or near the monitoring area, forming a network through self-organization. Furthermore, the WSN is a class of Low power and Lossy Networks (LLN), useful for monitoring a physical/environmental phenomenon [3]. The Routing Protocol for Low Power and Lossy Networks (RPL) is a standardized protocol designed to route data over LLN networks. RPL is the protocol to use Internet Protocol Version 6 (IPv6) over Low Power Wireless Personal Area Networks (6LowPAN). It uses distance-vector routing algorithms and Destination Oriented Directed Acyclic Graph (DODAG) to build a graph-based topology that is designed for large-scale Wireless Sensor Networks. The RPL protocol supports different traffic patterns: Multipoint-to-Point (MP2P), Point-to-Multipoint (P2MP), and Point-to-Point (P2P) [4]. The performance of the RPL routing protocol depends on two main things, which are the Medium Access Control (MAC) protocols of the data link layer and the network topologies of the application. MAC layer protocols for WSNs must be energy efficient to maximize the sensor nodes' lifetime since they are usually battery-powered. Additionally, using Radio Duty Cycle (RDC) mechanisms, MAC protocols save the power consumption of low-cost and battery-powered nodes with limited functional resources. The main functionality of the RDC is to keep the transceiver's radio off as much as possible, though it should wake the nodes up at the right time to receive packets of the channel.  On the other hand, topology control aims to find an optimal subset of network nodes, which guarantees network connectivity by exploiting network redundancy to increase its lifetime. Given that communication among nodes demands significant energy, this study delves into analyzing power consumption within the RPL routing protocol. The investigation is conducted under diverse Radio Duty Cycle (RDC) mechanisms and various network topologies. The insights derived from this research are valuable in assessing the viability of implementing the RPL routing protocol for a specific application, shedding light on its feasibility and energy efficiency in different operational scenarios.
   </p>
  </sec>
  <sec id="s2">
   <label>
    2
   </label>
   <title>
    Contributions
   </title>
   <p>
    This paper's novelty resides in their comprehensive approach to addressing power consumption challenges in battery-powered devices within the context of Internet of Things (IoT) deployments using WSNs. While deploying IoT technology with WSNs is becoming increasingly common, the authors highlight the persistent limitations of hardware constraints and communication capabilities in such devices. To overcome these challenges and ensure optimal performance, the paper presents an innovative solution: a developed sensor motes topology integrated with a Radio Duty Cycling (RDC) mechanism. This integration is significant as it leverages the RPL (IPv6 Routing Protocol for Low-power and Lossy networks) protocol, effectively managing power consumption in IoT deployments. The paper further distinguishes itself by conducting extensive simulations under four distinct network topologies (random, linear, tree, and elliptical) and evaluating the performance of three different RDC mechanisms (CXMAC, ContikiMAC, and NullRDC). Through this rigorous analysis, the authors demonstrate the efficacy of ContikiMAC in power saving, offering valuable insights into the optimal management of energy resources in IoT deployments. Overall, the distinctiveness of the paper lies in its holistic approach to power management, which integrates topology design with advanced RDC mechanisms and conducts thorough simulations to validate their effectiveness. By addressing the critical issue of power consumption in IoT devices, the authors contribute significantly to advancing WSN technology and its applications in various environments.
   </p>
   <p>
    The paper is organized into distinct sections, each serving a specific purpose in elucidating the subject matter comprehensively. Section 3 delves into the essential RPL specifications, establishing a foundational understanding. Expanding on this groundwork, Section 4 conducts a meticulous examination of relevant research in the field. The intricate details of radio duty cycle protocols are expounded in Section 5. Section 6 is dedicated to detailing the specific setups used in our simulations and the subsequent performance evaluations. Section 7 reveals the experimental outcomes and facilitates a comparative analysis, offering a nuanced interpretation of the results. In this section, we also delved into an extensive discussion and comparative analysis with existing literature. As we conclude this discussion, section 8 summarizes our findings and outlines potential avenues for future research in this domain.
   </p>
  </sec>
  <sec id="s3">
   <label>
    3
   </label>
   <title>
    The RPL overview
   </title>
   <p>
    Used for low power and loss networks (LLN), RPL is one of the most well-known IPv6 routing protocols. It was developed by Routing Over Low Power and Lossy Networks (ROLL) in Request for Comments (RFC) 6550 to meet the limitations of LLN networks such as low processing power, battery, and memory. The RPL protocol tackles the unique challenges presented by low-power and lossy networks through several key mechanisms. Firstly, it organizes network devices into a Directed Acyclic Graph (DAG) structure, optimizing routing paths and minimizing energy consumption by avoiding unnecessary packet forwarding. Its proactive routing approach establishes and maintains routes in advance, reducing the energy expenditure associated with frequent route discovery. Additionally, RPL adapts to changing network conditions dynamically, prioritizing metrics like energy consumption, latency, or reliability based on application requirements. It handles lossy networks effectively by incorporating route redundancy and multipath routing to ensure reliable packet delivery, even in environments prone to intermittent connectivity or packet drops. Furthermore, RPL includes efficient neighbor discovery and management mechanisms, enabling nodes to maintain accurate information about neighboring nodes' reachability and link quality. These features collectively make RPL well-suited for IoT deployments in constrained environments, providing energy-efficient, reliable, and adaptive routing solutions [4]. In addition, two kinds of routing protocols exist: reactive and proactive ones. The Reactive Routing protocol provides routes when needed, while the proactive routing protocol provides the routes before any other node requires it. The RPL is a Distance Vector (DV) proactive protocol-based source routing developed for working on several link-layer techniques. These techniques include IEEE 802.15.4 Physical Layer (PHY) and MAC layers. RPL mainly targets collection networks, where nodes periodically send measurements to a collection point. The protocol was designed to be highly adapted to WSN conditions and to provide alternate routes (whenever the default routes are inaccessible). RPL provides a mechanism for disseminating information about the new dynamically formed network topology. The RPL protocol is based on the concept of DODAG (Destination Oriented Directed Acyclic Graph), which is further used to disseminate data packets. DODAG is a DAG with a single destination to the root [3]. It describes oriented links between nodes ending at one or more root nodes. For RPL, a DAG has a treelike topology. Each node, which has its own preferred parent, follows along the routes through a certain tree. Thus, routing tables are larger when the node is near the root node. When the RPL network is initialized, RPL launches, searching for the routes as soon as possible. While computing the best paths, RPL uses more factors, for example, objective functions, routing metrics, and routing constraints. In order to advertise the information about the DODAGID, the objective function (OF), and the rank information, the DODAG root broadcasts a DIO (DODAG Information Object) message. Then, the neighboring nodes trait the received DIO and decide whether to join the topology or not. If the current node joins the DODAG, it adds the DIO sender address to its parent list and transmits the updated DIO message with its new rank computed according to the OF. If the node is a "leaf node", it just joins the DODAG. The neighboring nodes will repeat the previous steps until the graph is built. Rather than waiting for a DIO message, any node may also request a DIO message by sending a DIS (DODAG Information Solicitation) message to its neighbors. RPL works in two directions from the border router: upward routing, transmitting packets towards the border router from the leaf nodes, and downward routing sending packets from the border router to any node [4]. Overall, RPL offers a comprehensive set of features and mechanisms tailored to the unique challenges of constrained environments. Its OF allows for customizable routing based on energy consumption and reliability metrics. By organizing nodes into a hierarchical DAG and supporting multipath routing, RPL ensures efficient routing paths with improved fault tolerance and load balancing. The parent selection mechanism optimizes routing by considering factors like link quality and residual energy. Additionally, the Trickle algorithm controls message transmissions to conserve energy and reduce overhead, while efficient neighbor discovery and management facilitate accurate network topology information. These combined features make RPL an effective solution for IoT deployments, providing energy-efficient and reliable routing in LLNs networks.
   </p>
  </sec>
  <sec id="s4">
   <label>
    4
   </label>
   <title>
    Related works
   </title>
   <p>
    Vacation queueing analysis, charging sensor networks, and Radio Duty Cycle (RDC) mechanisms are integral components in energy management for WSNs and IoT deployments. Vacation queueing analysis optimizes energy usage by strategically scheduling idle periods for sensor nodes. Meanwhile, charging sensor network research explores methods to replenish energy in nodes to ensure continuous operation [5]. On the other hand, RDC mechanisms regulate the energy consumption of sensor nodes by managing active and sleep periods. The significance of mentioning research areas in a study focusing on the Impact of Network topologies and RDC Mechanisms on the RPL Routing Protocol Power Consumption lies in their collective contribution to energy efficiency. Over the years, researchers have predominantly conducted simulation experiments to investigate the impact of RDCs on power management in WSNs. This section delves into these research efforts, which have been centered on understanding how different RDC configurations influence energy consumption and overall power efficiency within WSNs. Through simulation-based studies, researchers have sought to explore various RDC mechanisms, their parameters, and their effects on network performance metrics such as power consumption, network lifetime, and packet delivery.
   </p>
   <p>
    In reference [6], the authors discussed the impact of different RDC mechanisms on the performance of RPL networks in WSNs. It emphasizes the necessity of simulations and real-world measurements to comprehend the intricate cross-layer interactions affecting various Quality of Service (QoS) parameters. While ContikiMAC emerged as more efficient in simulation experiments, real-world measurements highlighted the need to fine-tune its parameters to optimize network performance, which relies heavily on the deployment environment. The study also identifies areas for further investigation, such as examining the influence of ContikiMAC's Clear Channel Assessment (CCA) threshold influence on QoS, not only in interference-free scenarios but also in noisy environments. Furthermore, in their paper [7], the authors conduct a thorough investigation into the effects of various RDC mechanisms, ContikiMAC, CXMAC, and LPP, on RPL network performance. They advocate for a combined approach of simulations and real-world measurements to understand the intricate cross-layer interactions affecting QoS parameters in WSNs. Their findings show ContikiMAC's superior energy efficiency, albeit with a sacrifice in the radio link budget. They emphasize the necessity of real mote testing for RDC protocols to uncover potential malfunctions arising from hardware nuances. Real mote testing involves performing actual experiments or tests using physical motes or nodes in a network, rather than relying solely on simulations or theoretical analysis. In the study presented in [8], the authors analyze the performance of RPL in terms of Packet Delivery Ratio (PDR) and Round Trip Time (RTT) within the context of 6LoWPAN. The study evaluates the effectiveness of topology control strategies across different network topologies, including linear, manual, elliptical, and random configurations. Utilizing simulations conducted in the Contiki Operating System environment with Cooja, the researchers find that the manual topology consistently outperforms the other topologies in terms of both PDR and RTT. This superiority is attributed to the manual topology's meticulous planning, which accounts for channel impairments during deployment, thereby enhancing the QoS for the nodes. In their study, researchers [9] explore how various network topologies (chain, linear, circular, random-top, and random-center) and MAC protocols (ContikiMAC, CXMAC, NullMAC, a SicslowMAC) impact the efficiency of the RPL routing protocol. While ContikiMAC meets the required criteria, it exhibits higher latency than other RDCs. Additionally, the number of nodes influences network performance, with a higher node count correlating to lower network quality. Interestingly, topology significantly impacts PDR and latency, with high-hop topologies like chain and linear configurations exhibiting lower network performance. Reference [10] focuses on evaluating the performance of the RPL protocol under different MAC protocols, namely ContikiMAC, CXMAC, and NullRDC. The study examines end-to-end delay, packet delivery ratio, and power consumption, revealing that NullRDC exhibits superior latency performance while ContikiMAC excels in power consumption. In [11], authors discussed various MAC protocols, highlighting the need for further research and enhancements to cater to diverse sensor node requirements. Evaluation of four MAC protocols (NullMAC, XMAC, CXMAC, and ContikiMAC) in the Contiki OS reveals that listening operations consume the most power, while transmission operations are the least power-intensive. The paper in [12] concentrates on MAC and RDC drivers, emphasizing the critical roles of the MAC driver in collision detection and retransmissions, and the RDC driver in controlling the node's wake-up and sleep mechanism. The RDC drivers analyzed in the project include ContikiMAC, CXMAC, and NullRDC, and simulations conducted with ContikiOS explore grid topology with varied parameters.
   </p>
   <p>
    Table 1 offers a comprehensive summary of relevant studies in the field, shedding light on our paper's unique contributions compared to existing literature on radio duty cycle (RDC) mechanisms.
   </p>
   <table-wrap id="table-1">
    <label>
     Table 1
    </label>
    <caption>
     <title>
      Comparative overview of prior research and the current study
     </title>
    </caption>
    <alternatives>
     <graphic mime-subtype="tif" mimetype="image" xlink:href="TSP_CMC_49207 - Copy-table-1.tif"/>
     <table>
      <colgroup>
       <col/>
       <col/>
       <col/>
       <col/>
       <col/>
       <col/>
      </colgroup>
      <thead>
       <tr>
        <th>
         Paper
        </th>
        <th>
         Year
        </th>
        <th>
         Topology
        </th>
        <th>
         Performances Metrics
        </th>
        <th>
         RDC protocols
        </th>
        <th>
         Simulator
        </th>
       </tr>
      </thead>
      <tbody>
       <tr>
        <td>
         [6]
        </td>
        <td>
         2016
        </td>
        <td>
         Random
        </td>
        <td>
         Average Power consumption, PDR, E2ED
        </td>
        <td>
         ContikiMAC, CXMAC, LPP and NullRDC.
        </td>
        <td rowspan="2">
         Contiki 2.6
        </td>
       </tr>
       <tr>
        <td>
         [7]
        </td>
        <td rowspan="2">
         2017
        </td>
        <td>
         -
        </td>
        <td>
         Average Power consumption, Latency, PDR
        </td>
        <td>
         ContikiMAC, CXMAC, LPP, and NullRDC
        </td>
       </tr>
       <tr>
        <td>
         [8]
        </td>
        <td>
         linear, manual, elliptical, and random
        </td>
        <td>
         PDR, RTT
        </td>
        <td>
         -
        </td>
        <td rowspan="2">
         Contiki
        </td>
       </tr>
       <tr>
        <td>
         [9]
        </td>
        <td>
         2018
        </td>
        <td>
         chain, linear, circle, random top, random center
        </td>
        <td>
         PDR, Latency, Average power consumption
        </td>
        <td>
         ContikiMAC, CXMAC, NullMAC and SicslowMAC
        </td>
       </tr>
       <tr>
        <td>
         [10]
        </td>
        <td rowspan="2">
         2019
        </td>
        <td>
         Mesh
        </td>
        <td>
         E2ED, PDR, and power consumption
        </td>
        <td>
         ContikiMAC, CXMAC, and NullRDC
        </td>
        <td>
         Contiki 2.7
        </td>
       </tr>
       <tr>
        <td>
         [11]
        </td>
        <td>
         Peer-to-Peer/ Random
        </td>
        <td>
         LPM, TX, RX states
        </td>
        <td>
         ContikiMAC, CXMAC, XMAC and NullMAC
        </td>
        <td rowspan="3">
         Contiki 3.0
        </td>
       </tr>
       <tr>
        <td>
         [12]
        </td>
        <td>
         2020
        </td>
        <td>
         Grid topology
        </td>
        <td>
         TX, RX
        </td>
        <td>
         CSMA, NullMAC, ContikiMAC, CXMAC, NullMAC
        </td>
       </tr>
       <tr>
        <td>
         This paper
        </td>
        <td>
         2023
        </td>
        <td>
         linear, manual, elliptical, and Tree
        </td>
        <td>
         Power states and average power consumption
        </td>
        <td>
         ContikiMAC, CXMAC and NullRDC
        </td>
       </tr>
      </tbody>
     </table>
    </alternatives>
   </table-wrap>
  </sec>
  <sec id="s5">
   <label>
    5
   </label>
   <title>
    Radio Duty Cycles protocols
   </title>
   <p>
    Radio Duty Cycle (RDC) mechanisms aim to efficiently manage the radio states in wireless communication to minimize power consumption. To achieve this, protocols often schedule the radio to be turned off for extended periods. In scenarios where clock synchronization is challenging due to complexity or cost, non-symmetric RDC protocols come into play. These asynchronous protocols involve receivers periodically waking up, and senders must time their transmissions accordingly. In this context, the sender often makes multiple attempts to ensure successful communication with the intermittently awake receiver. Alternatively, some protocols employ a different approach. When a receiver awakens, it broadcasts a ready packet, and the period between these temporary periodic wake-ups is termed the Clear Channel Interval (CCI). This strategy enhances energy efficiency by allowing receivers to announce their availability, reducing the need for continuous transmission attempts, and promoting more synchronized communication within the network. In the following section, we consider the energy performance evaluation of synchronous energy-efficient duty-cycling RDC protocols including, the CXMAC, the ContikiMAC, and the NullRDC.
   </p>
   <sec id="s5_1">
    <label>
     5.1
    </label>
    <title>
     The CXMAC duty-cycle mechanism
    </title>
    <p>
     CXMAC, an advancement over the Low Power Listening (LPL) protocol, addresses key energy consumption and delay challenges. In LPL, using long preamble results in increased energy consumption for both senders and receivers. CXMAC introduces a solution by directly embedding the target receiver's address into the preamble, allowing for quick identification without waiting for the entire preamble. This innovative approach enables non-target receivers to return to sleep, conserving energy promptly. Moreover, CXMAC employs short preambles, reducing the overall sending time for the transmitter. This enhances the efficiency of data transmission and provides receivers with the flexibility to suspend listening even in the middle of preamble transmission. In summary, CXMAC optimizes energy consumption, minimizes delays in communication, and improves the overall efficiency of the protocol, making it a promising choice for scenarios where low-power operation is paramount [13].
    </p>
   </sec>
   <sec id="s5_2">
    <label>
     5.2
    </label>
    <title>
     The ContikiMAC duty-cycle mechanism
    </title>
    <p>
     ContikiMAC, an integral component of the Contiki operating system (OS) tailored for wireless sensor networks in the IoT domain, stands out for its low-power duty-cycle mechanism. Prioritizing energy efficiency, the protocol adopts a time-slotted approach, enabling nodes to synchronize wake-up intervals to minimize collisions and contention. Notably adaptable, ContikiMAC dynamically adjusts its duty cycle in response to varying network conditions, optimizing energy consumption during periods of low activity. Additionally, it accommodates the sporadic nature of IoT applications by supporting asynchronous communication within time slots. The protocol's collision avoidance mechanisms, including preamble sampling and clear channel assessment, enhance communication reliability in the presence of other wireless devices. Further, ContikiMAC incorporates features such as precise timings between data transmissions, fast sleep optimization for noise-induced wake-ups, and phase-lock optimization to determine neighboring nodes' wake-up periods. Anchored in the Clear Channel Assessment (CCA) mechanism, the protocol utilizes the Received Signal Strength Indicator (RSSI) to gauge channel activity, signaling a clear channel when the RSSI falls below a specified threshold. As part of the Contiki OS framework, ContikiMAC is a robust tool for developers constructing energy-efficient and responsive solutions for IoT applications. [14].
    </p>
   </sec>
   <sec id="s5_3">
    <label>
     5.3
    </label>
    <title>
     The NullRDC duty-cycle mechanism
    </title>
    <p>
     NullRDC is a minimalist yet effective duty-cycle mechanism within the Contiki OS, specifically tailored for low-power wireless communication in Internet of Things (IoT) applications. Operating within the Contiki communication stack, NullRDC adopts a straightforward approach to managing power consumption. It employs a duty-cycle strategy, allowing nodes to enter low-power sleep modes, thereby conserving energy periodically. The packet format used by NullRDC is intentionally simple, minimizing overhead in transmitted data and making it suitable for resource-constrained devices with limited processing power and memory. Acknowledging the importance of reliability, NullRDC may incorporate an acknowledgment mechanism to confirm successful packet reception. Depending on the specific implementation, NullRDC may or may not involve time synchronization among nodes, a crucial factor for coordinating communication schedules and minimizing collisions. Designed to focus on energy efficiency, NullRDC is well integrated into the Contiki OS environment, providing developers with a lightweight solution for scenarios where basic duty-cycle mechanisms suffice. Its applicability extends to IoT applications where communication requirements are less stringent than necessitating more complex duty-cycle protocols. For the most accurate and updated information, developers are encouraged to refer to the official Contiki documentation and any associated technical resources [15].
    </p>
   </sec>
  </sec>
  <sec id="s6">
   <label>
    6
   </label>
   <title>
    Simulation setup
   </title>
   <p>
    This section will describe the simulation setup and the different parameters used to carry out the performance evaluation of the RPL protocol with different topologies and MAC protocols.
   </p>
   <sec id="s6_1">
    <label>
     6.1
    </label>
    <title>
     Operating System and Simulator
    </title>
    <p>
     Contiki, an open-source and lightweight operating system [16], has been purposefully designed for event-driven applications in the IoT domain, specifically catering to resource-constrained embedded systems. With a minimum requirement of 2 kB random access memory (RAM) and 30 kB read-only memory (ROM), Contiki OS boasts features such as multithreading and optional preemptive multithreading. The foundation of the OS lies in protothreads--lightweight stack threads [15]. Operating with an event-driven kernel and preemptive multithreading, Contiki OS is strategically crafted to enhance resource efficiency, targeting the support of low-power devices within the IoT landscape. In tandem, the Cooja simulator emulates sensor networks within the Contiki OS. Built on Java and compatible with sensor nodes coded in C, Cooja offers versatility with various hardware platforms. Specifically designed for low-power battery-driven IoT platforms like TelosB, Z1, Tmote Sky, and MicaZ, aiming for extended operational durations without human intervention [9]. Cooja stands out by facilitating concurrent simulations across three levels: networking, machine code instruction, and operating system levels. Combining the capabilities of Contiki OS and the Cooja simulator, this integrated approach empowers researchers and developers to explore and optimize IoT applications in a simulated environment, paving the way for advancements in resource-efficient and long-lasting IoT solutions.
    </p>
   </sec>
   <sec id="s6_2">
    <label>
     6.2
    </label>
    <title>
     Simulation parameters
    </title>
    <p>
     The simulation, illustrated in Fig. 1, uses the Cooja simulator, and encompasses diverse deployments. The chosen wireless channel model is the Unit Disk Graph Model (UDGM) Distance Loss, which likely incorporates characteristics related to distance-dependent signal attenuation and channel loss. The TmoteSky sensor type, known for its low-power capabilities, is employed in the simulation [17]. Diverse network topologies, including random, linear, elliptical, and a manually defined configuration, are considered to assess their impact on network performance. The simulation involves a single sink node serving as a sink node and a variable number of sender nodes ranging from 10 to 30, offering insights into network behavior under different load and density conditions. With a channel check rate set at 8Hz, nodes periodically check the wireless channel for activity, influencing network responsiveness. The radio transmission range is set to 50 meters, with an interference range of 100 meters, defining potential interference distances between nodes. The chosen MAC protocol is CSMA (Carrier Sense Multiple Access), enabling nodes to listen to the channel before transmitting to reduce collision likelihood. The simulation is designed to run for 1 hour, providing a comprehensive temporal scope for observing and analyzing network behavior under these conditions.
    </p>
    <fig id="fig-1">
     <label>
      Fig.1
     </label>
     <caption>
      <title>
       (a) Random topology             (b) linear topology
      </title>
     </caption>
     <graphic mime-subtype="tif" mimetype="image" xlink:href="TSP_CMC_49207 - Copy-fig-1.jpg"/>
    </fig>
    <fig id="fig-2">
     <label>
      Fig.2
     </label>
     <caption>
      <title>
       (a) Random topology             (b) linear topology
      </title>
     </caption>
     <graphic mime-subtype="tif" mimetype="image" xlink:href="TSP_CMC_49207 - Copy-fig-2.jpg"/>
    </fig>
    <fig id="fig-3">
     <label>
      Fig.3
     </label>
     <caption>
      <title/>
     </caption>
     <graphic mime-subtype="tif" mimetype="image" xlink:href="TSP_CMC_49207 - Copy-fig-3.jpg"/>
    </fig>
    <fig id="fig-4">
     <label>
      Fig.4
     </label>
     <caption>
      <title/>
     </caption>
     <graphic mime-subtype="tif" mimetype="image" xlink:href="TSP_CMC_49207 - Copy-fig-4.jpg"/>
    </fig>
    <p>
     Figure 1: Different Network topologies for 10 sender nodes
    </p>
    <p>
     Table 2 provides a tabulated overview of the parameters considered for the simulation. This carefully curated set of parameters aims to capture a holistic understanding of the studied environment.
    </p>
    <table-wrap id="table-2">
     <label>
      Table 2
     </label>
     <caption>
      <title>
       Simulation setups
      </title>
     </caption>
     <alternatives>
      <graphic mime-subtype="tif" mimetype="image" xlink:href="TSP_CMC_49207 - Copy-table-2.tif"/>
      <table>
       <colgroup>
        <col align="center"/>
        <col align="center"/>
       </colgroup>
       <thead>
        <tr align="center">
         <th>
          Settings
         </th>
         <th>
          Values
         </th>
        </tr>
       </thead>
       <tbody>
        <tr align="center">
         <td>
          Wireless channel model
         </td>
         <td>
          UDGM Distance Loss
         </td>
        </tr>
        <tr align="center">
         <td>
          Sensor type
         </td>
         <td>
          TmoteSky
         </td>
        </tr>
        <tr align="center">
         <td>
          Number of Sink nodes
         </td>
         <td>
          1
         </td>
        </tr>
        <tr align="center">
         <td>
          Number of Sender Nodes
         </td>
         <td>
          10-30
         </td>
        </tr>
        <tr align="center">
         <td>
          Channel_check_Rate
         </td>
         <td>
          8HZ
         </td>
        </tr>
        <tr align="center">
         <td>
          Radio transmission  Interference rang
         </td>
         <td>
          50m,100m
         </td>
        </tr>
        <tr align="center">
         <td>
          MAC protocol
         </td>
         <td>
          CSMA
         </td>
        </tr>
        <tr align="center">
         <td>
          Simulation Time
         </td>
         <td>
          1 hour
         </td>
        </tr>
       </tbody>
      </table>
     </alternatives>
    </table-wrap>
   </sec>
   <sec id="s6_3">
    <label>
     6.3
    </label>
    <title>
     Performance Metrics
    </title>
    <p>
     Our power evaluation is conducted in two facets. Initially, we delve into the power states of individual nodes (excluding the root node) to glean more nuanced insights. Subsequently, we assess the power consumption of the entire network to obtain a comprehensive overview of power dynamics. Three distinct power consumption operational states are taken into consideration: the Low Power Mode (LPM), the listening state (RX), and the transmitting state (TX).
    </p>
    <list list-type="unorder">
     <list-item>
      <p>
       <italic>
        The Low Power Mode
       </italic>
      </p>
     </list-item>
    </list>
    <p>
     For the Low Power Mode or Sleep State, nodes operate with the lowest power consumption. Indeed, this state is referred to as the sleep state. Within this state, the transceiver that consumes the highest power is completely turned off for a set period and is later turned on. Although the transceiver is switched off, many components including the microcontroller, are powered on to process any available data [11].
    </p>
    <list list-type="unorder">
     <list-item>
      <p>
       <italic>
        The listening state
       </italic>
      </p>
     </list-item>
    </list>
    <p>
     For the Listen State, also called the promiscuous state, the transceiver is constantly in the ON state, sensing the radio medium for any coming data needing transmission. By default, IEEE 802.15.4 devices are set in this state of constantly sensing the radio medium. According to the MAC implementations, this state will last for a predetermined period before switching to another state [11].
    </p>
    <list list-type="unorder">
     <list-item>
      <p>
       <italic>
        The transmit state
       </italic>
      </p>
     </list-item>
    </list>
    <p>
     During this state, the nodes are in an active operational state, the sensed data is sent across the network from the source node to the destination one. In this state, the transmitter module is turned on while the receiver module is turned off. Based on the MAC protocol implemented, once the transmit operation is completed, the node enters another state, which could be either [11].
    </p>
    <list list-type="unorder">
     <list-item>
      <p>
       <italic>
        Average Power consumption (APC)
       </italic>
      </p>
     </list-item>
    </list>
    <p>
     APC is a critical metric that signifies the average rate at which energy is expended by simulated nodes within a network over a specified duration. This metric holds significant importance in evaluating the energy efficiency of networked devices and understanding their implications for battery life. The calculation of APC involves employing the following equation [18]:
    </p>
    <p>
     APC=
     <disp-formula>
      <alternatives>
       <graphic mime-subtype="tif" mimetype="image" xlink:href="EJ-GEO_421-eqn-1.tif"/>
       <tex-math>
        
        <math xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math" xmlns:mml="http://www.w3.org/1998/Math/MathML">
         <mfrac>
          <mrow>
           <msub>
            <mrow>
             <mi>
              E
             </mi>
             <mi>
              n
             </mi>
             <mi>
              e
             </mi>
             <mi>
              r
             </mi>
             <mi>
              g
             </mi>
             <mi>
              e
             </mi>
             <mi>
              s
             </mi>
             <mi>
              t
             </mi>
            </mrow>
            <mrow>
             <mi>
              v
             </mi>
             <mi>
              a
             </mi>
             <mi>
              l
             </mi>
             <mi>
              u
             </mi>
             <mi>
              e
             </mi>
            </mrow>
           </msub>
           <mo>
            ∗
           </mo>
           <mi>
            I
           </mi>
           <mo>
            ∗
           </mo>
           <mi>
            V
           </mi>
          </mrow>
          <mrow>
           <msub>
            <mrow>
             <mi>
              R
             </mi>
             <mi>
              t
             </mi>
             <mi>
              i
             </mi>
             <mi>
              m
             </mi>
             <mi>
              e
             </mi>
             <mi>
              r
             </mi>
            </mrow>
            <mrow>
             <mi>
              s
             </mi>
             <mi>
              e
             </mi>
             <mi>
              c
             </mi>
             <mi>
              o
             </mi>
             <mi>
              n
             </mi>
             <mi>
              d
             </mi>
            </mrow>
           </msub>
           <mo>
            ∗
           </mo>
           <mi>
            R
           </mi>
           <mi>
            u
           </mi>
           <mi>
            n
           </mi>
           <mi>
            t
           </mi>
           <mi>
            i
           </mi>
           <mi>
            m
           </mi>
           <mi>
            e
           </mi>
          </mrow>
         </mfrac>
        </math>
       </tex-math>
      </alternatives>
     </disp-formula>
     (Mw)
     <disp-formula>
      <alternatives>
       <graphic mime-subtype="tif" mimetype="image" xlink:href="EJ-GEO_421-eqn-1.tif"/>
       <tex-math>
        
        <math xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math" xmlns:mml="http://www.w3.org/1998/Math/MathML">
         <msub>
          <mrow>
           <mi>
            E
           </mi>
           <mi>
            n
           </mi>
           <mi>
            e
           </mi>
           <mi>
            r
           </mi>
           <mi>
            g
           </mi>
           <mi>
            e
           </mi>
           <mi>
            s
           </mi>
           <mi>
            t
           </mi>
          </mrow>
          <mrow>
           <mi>
            v
           </mi>
           <mi>
            a
           </mi>
           <mi>
            l
           </mi>
           <mi>
            u
           </mi>
           <mi>
            e
           </mi>
          </mrow>
         </msub>
        </math>
       </tex-math>
      </alternatives>
     </disp-formula>
     (1)
    </p>
    <p>
     <disp-formula>
      <alternatives>
       <graphic mime-subtype="tif" mimetype="image" xlink:href="EJ-GEO_421-eqn-1.tif"/>
       <tex-math>
        
        <math xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math" xmlns:mml="http://www.w3.org/1998/Math/MathML">
         <msub>
          <mrow>
           <mi>
            E
           </mi>
           <mi>
            n
           </mi>
           <mi>
            e
           </mi>
           <mi>
            r
           </mi>
           <mi>
            g
           </mi>
           <mi>
            e
           </mi>
           <mi>
            s
           </mi>
           <mi>
            t
           </mi>
          </mrow>
          <mrow>
           <mi>
            v
           </mi>
           <mi>
            a
           </mi>
           <mi>
            l
           </mi>
           <mi>
            u
           </mi>
           <mi>
            e
           </mi>
          </mrow>
         </msub>
        </math>
       </tex-math>
      </alternatives>
     </disp-formula>
     refers to the energy consumption value obtained from the Energest module in Contiki. It provides information about energy consumption by various components such as the CPU, radio, and other peripherals. I and V represent, respectively, the current (in amperes) consumed by the node and the voltage (in volts) supplied to the node.
     <disp-formula>
      <alternatives>
       <graphic mime-subtype="tif" mimetype="image" xlink:href="EJ-GEO_421-eqn-1.tif"/>
       <tex-math>
        
        <math xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math" xmlns:mml="http://www.w3.org/1998/Math/MathML">
         <msub>
          <mrow>
           <mi>
            R
           </mi>
           <mi>
            t
           </mi>
           <mi>
            i
           </mi>
           <mi>
            m
           </mi>
           <mi>
            e
           </mi>
           <mi>
            r
           </mi>
          </mrow>
          <mrow>
           <mi>
            s
           </mi>
           <mi>
            e
           </mi>
           <mi>
            c
           </mi>
           <mi>
            o
           </mi>
           <mi>
            n
           </mi>
           <mi>
            d
           </mi>
          </mrow>
         </msub>
        </math>
       </tex-math>
      </alternatives>
     </disp-formula>
     : Refers to the time (in seconds) of the Rtimer module, which is a real-time timer module in Contiki.  Runtime depicts the total runtime of the simulation (in seconds).
    </p>
   </sec>
  </sec>
  <sec id="s7">
   <label>
    7
   </label>
   <title>
    Simulation results
   </title>
   <p>
    This section examines the outcomes of the simulations and provides a comprehensive performance evaluation of the RPL protocol operating across four distinct topologies and employing three different Radio Duty Cycle (RDC) protocols.
   </p>
   <sec id="s7_1">
    <label>
     7.1
    </label>
    <title>
     Power States
    </title>
    <sec id="s7_1_1">
     <label>
      7.1.1
     </label>
     <title>
      The Low Power Mode
     </title>
     <p>
      The presented Fig. 2 and 3 offer insights into the Low Power Mode (LPM) state across different topologies to depict power consumption variations. Notably, for NullRDC, the LPM tends to decrease as the number of sensor nodes increases across various topologies. In the case of CXMAC, LPM decreases with an increasing number of motes in Random and Tree topologies. However, for Linear and Elliptical topologies, CXMAC exhibits fluctuations in LPM power consumption within narrow ranges. Contrasting this, ContikiMAC's LPM power consumption shows variability without a stable pattern in Random and Linear topologies decreasing with an increasing number of sensor nodes in Elliptical and Tree topologies. Additionally, the highest LPM power consumption for NullRDC reaches approximately 0.00512 mW. CXMAC demonstrates the lowest LPM power consumption compared to ContikiMAC and NullRDC mechanisms, indicating its superior energy efficiency in the examined scenarios. In comparing the Low Power Mode (LPM) power consumption of ContikiMAC and CXMAC in different network topologies, it becomes evident that CXMAC exhibits lower LPM power consumption than ContikiMAC. This distinction arises from the inherent design principles of these Medium Access Control (MAC) protocols. CXMAC relies on a contention-based approach, allowing nodes to contend for access to the channel without explicit synchronization. This contention-based strategy minimizes idle times and reduces energy consumption during LPM in scenarios characterized by sparse traffic and sporadic communication needs. On the other hand, ContikiMAC employs a more scheduled approach with synchronized listening periods, which, while beneficial in scenarios with regular communication patterns, may introduce additional overhead and energy consumption during idle periods, especially in situations with infrequent traffic. The contention-based nature of CXMAC proves advantageous in optimizing power usage during inactivity, making it a compelling choice for networks with sporadic communication demands. Ultimately, the choice between these protocols should be informed by the specific characteristics of the deployment scenario, such as network topology and traffic patterns, to ensure optimal energy efficiency.
     </p>
     <p>
      Figure 2: LPM vs power consumption of Random and linear topology
     </p>
     <p>
      Figure 3: LPM vs power consumption of elliptical and tree topology
     </p>
     <p>
      As mentioned before, NullRDC, a minimalistic radio duty cycling protocol within Contiki OS, is characterized by its simplicity and minimal protocol overhead. However, this simplicity may contribute to relatively higher Low Power Mode (LPM) power consumption compared to more advanced duty cycling protocols such as ContikiMAC or CXMAC. NullRDC lacks explicit synchronization mechanisms between nodes, leading to a contention-based approach where nodes contend for channel access without coordinated wake-up schedules. While this contention-based access can be efficient in certain scenarios, it may result in more frequent wake-ups and increased power consumption during idle periods, especially in situations with sparse traffic. The protocol's fixed nature and limited adaptability, coupled with the absence of duty-cycling optimization features found in more sophisticated protocols, might contribute to suboptimal LPM power consumption in scenarios with varying communication patterns. Although NullRDC's lightweight design is advantageous for minimizing protocol overhead, the trade-off involves potentially higher LPM power consumption, making it crucial for users to consider the specific requirements and characteristics of their application and network environment when choosing a duty cycling protocol.
     </p>
    </sec>
    <sec id="s7_1_2">
     <label>
      7.1.2
     </label>
     <title>
      The RX state
     </title>
     <p>
      Fig. 4 and Fig. 5 present a comprehensive analysis of the Receive (RX) power consumption across Random, Linear, Elliptical, and Tree topologies, where ContikiMAC, CXMAC, and NullRDC are implemented with varying numbers of sensor nodes ranging from 10 to 30. ContikiMAC consistently demonstrates the lowest RX power consumption in all scenarios, highlighting its efficacy in managing energy consumption during the reception phase. Conversely, NullRDC consistently registers the highest RX power consumption, with an approximate value of 8.699 milliwatts, highlighting the potential trade-off between protocol simplicity and energy efficiency. The trend of slightly increasing RX power consumption with the growth in the number of sensor nodes across all RDC mechanisms and topologies suggests the influence of network density on contention and communication activities. Further analysis could uncover specific trends or variations in RX power consumption based on topology types, providing valuable insights into the protocol's adaptability to different network scenarios.
     </p>
     <p>
      In the simulation results, ContikiMAC emerges as a standout performer, consistently exhibiting the lowest RX (Receive) power consumption across various network topologies and sensor node densities ranging from 10 to 30. The protocol's effectiveness in minimizing RX power is attributed to its well-crafted design features. ContikiMAC employs a judicious duty cycling mechanism, intelligently alternating between active and low-power states, ensuring that the radio is active only when essential. Incorporating scheduled wake-up periods enhances synchronization among nodes, reducing time spent in an active state and optimal power utilization during reception. Notably, the protocol's emphasis on low overhead, adaptive listening behavior, and efficient synchronization mechanisms collectively reinforce its energy-efficient characteristics. These results underscore ContikiMAC's suitability for applications in wireless sensor networks where low RX power consumption is imperative for prolonging device battery life and enhancing overall network performance.
     </p>
     <p>
      NullRDC's tendency to consume higher RX (Receive) power than CXMAC can be attributed to several design characteristics. NullRDC relies on a contention-based access approach where nodes contend for channel access without explicit synchronization. This contention-based mechanism and the lack of synchronized wake-up schedules may lead to increased collisions and retransmissions, resulting in elevated RX power consumption. The fixed-duty cycling employed by NullRDC may limit its adaptability, preventing nodes from efficiently adjusting their listening periods based on varying network conditions. Despite its minimal protocol overhead, the simplicity of NullRDC may contribute to less optimal utilization of low-power states during the reception. In contrast, CXMAC incorporates a more advanced strategy, including contention-based access with additional optimizations, potentially leading to better RX power management.
     </p>
     <p>
      Figure 4: RX vs power consumption of Random and linear topology
     </p>
     <p>
      Figure 5: RX vs power consumption of elliptical and tree topology
     </p>
    </sec>
    <sec id="s7_1_3">
     <label>
      7.1.3
     </label>
     <title>
      The TX state
     </title>
     <p>
      The analysis of the four graphs (Fig. 6 and Fig. 7) reveals insightful trends in the power consumption of the Transmission operation across different topologies while employing the three distinct radio duty cycles. Notably, NullRDC consistently stands out by exhibiting the lowest transmission power across all topologies, maintaining a stable value of approximately 0.001 MW irrespective of the varying number of sensor nodes. This remarkable stability underscores NullRDC's efficiency in minimizing power consumption during transmission activities. In contrast, both CXMAC and ContikiMAC demonstrate instability in their Transmission power across various topologies, particularly noticeable in the ellipse and linear topologies. This instability may indicate the protocols' responses to dynamic network conditions and contention for channel access. Remarkably, ContikiMAC consistently registers the highest values of Transmission power consumption.
     </p>
     <p>
      The finding that ContikiMAC consumes the highest value of TX (Transmission) power suggests several potential factors contributing to this observation. ContikiMAC's scheduled wake-up periods, designed to reduce collision probabilities, may inadvertently lead to increased TX power consumption as nodes wake up more frequently. The duty cycling mechanism, central to ContikiMAC, may contribute to higher TX power usage during active periods if not finely tuned to the network's specific communication needs. The adaptive listening behaviour of ContikiMAC, responsive to traffic patterns, could result in elevated TX power in scenarios with perceived contention or interference. ContikiMAC's optimization for low-latency communication may involve more frequent wake-ups and shorter listening periods, potentially influencing higher TX power consumption. The impact of network density and topology cannot be overlooked, as ContikiMAC might adapt its TX power based on the specific challenges posed by the density of nodes or the intricacies of the network layout. On the other hand, the consistently low TX power consumption observed in NullRDC can be attributed to several key design characteristics inherent in the protocol. NullRDC's reliance on a contention-based access mechanism, coupled with minimal protocol overhead, fosters a lightweight and efficient communication process. The absence of explicit synchronization allows nodes to successfully transmit data with lower power, especially in scenarios with low contention or interference. The simplicity of NullRDC extends to its adaptive adjustment of transmission power, facilitating dynamic optimization based on immediate communication needs and ensuring reliable data transmission with minimal energy expenditure. The protocol's fixed duty cycling approach contributes to stability and efficiency in TX power usage, as nodes transmit data within predictable intervals, avoiding unnecessary energy consumption. NullRDC's overarching optimization for low communication complexity aligns with its ability to achieve efficient and reliable data transmission, making it a compelling choice for scenarios where minimizing TX power consumption is paramount.
     </p>
     <p>
      Figure 6: TX vs power consumption of Random and linear topology
     </p>
     <p>
      Figure 7: TX vs power consumption of elliptical and tree topology
     </p>
    </sec>
   </sec>
   <sec id="s7_2">
    <label>
     7.2
    </label>
    <title>
     Average power consumption performance
    </title>
    <p>
     The analysis of Fig. 8 to 10 provides a comprehensive overview of the average power consumption across various Radio Duty Cycle (RDC) protocols, topologies, and varying numbers of sensor nodes. Notably, the average power remains consistently high at around 8.7 mW when NullRDC is employed, making it the least energy-efficient choice across all topologies. This elevated power consumption is attributed to the contention-based approach of NullRDC, where nodes contend for channel access without explicit synchronization, resulting in a persistent active state and continuous radio operation. Contrastingly, ContikiMAC emerges as the optimal RDC mechanism for energy efficiency, outperforming other protocols. Its superiority is particularly evident when compared to NullRDC, highlighting the effectiveness of duty cycling and synchronization mechanisms in minimizing power consumption during idle periods. CXMAC falls in the middle, with an average power consumption of approximately 0.6 mW, highlighting moderate efficiency in managing energy. Furthermore, the proportional relationship between the average power consumption of ContikiMAC and CXMAC and the number of sensor nodes underscores the adaptability of these protocols to varying network sizes.
    </p>
    <fig id="fig-5">
     <label>
      Fig.5
     </label>
     <caption>
      <title>
       ContikiMAC average power consumption vs different topologies
      </title>
     </caption>
     <graphic mime-subtype="tif" mimetype="image" xlink:href="TSP_CMC_49207 - Copy-fig-5.jpg"/>
    </fig>
    <fig id="fig-6">
     <label>
      Fig.6
     </label>
     <caption>
      <title>
       CXMAC average power consumption vs different topologies
      </title>
     </caption>
     <graphic mime-subtype="tif" mimetype="image" xlink:href="TSP_CMC_49207 - Copy-fig-6.jpg"/>
    </fig>
    <fig id="fig-7">
     <label>
      Fig.7
     </label>
     <caption>
      <title>
       NullRDC average power consumption vs different topologies
      </title>
     </caption>
     <graphic mime-subtype="tif" mimetype="image" xlink:href="TSP_CMC_49207 - Copy-fig-7.jpg"/>
    </fig>
    <p>
     The observed performance of ContikiMAC, particularly its lowest average power consumption in the random topology, aligns closely with the stated contribution of our work in identifying the most energy-efficient radio duty cycle for Wireless Sensor Networks (WSNs). This finding suggests that ContikiMAC is well-suited for environments where nodes are distributed randomly, a common scenario in many real-world WSN deployments. The protocol's adaptive duty cycling and synchronization mechanisms effectively leverage the irregular network structure inherent in such environments, resulting in efficient power management during both communication and idle periods. This insight is crucial for practitioners seeking to deploy WSNs in diverse settings, as it provides valuable guidance on selecting the most appropriate radio duty cycle based on specific application requirements and environmental conditions. On the other hand, the finding that CXMAC and NullRDC exhibit the highest average power consumption in Tree topologies indicates potential challenges associated with these protocols in hierarchically structured networks. Tree topologies often involve longer communication paths and increased contention for access to the central node, leading to higher power consumption. The contention-based approach of NullRDC might result in prolonged periods of active radio operation in Tree topologies, contributing to elevated average power consumption. Similarly, CXMAC, with its contention-based nature, might face increased contention and retransmission rates in Tree topologies, affecting overall energy efficiency. Understanding these topology-specific trends is crucial for selecting an appropriate RDC protocol based on the characteristics of the target network. It highlights the importance of considering network topology when designing and deploying wireless sensor networks, as the efficiency of RDC protocols can vary based on the spatial arrangement of nodes. The insights gained from such observations can inform network planning and optimization efforts to achieve better energy efficiency and overall performance.
    </p>
    <p>
     Table 3 below provides a concise overview of each study's findings and highlights how our work in 2023 extends and improves upon these earlier studies.
    </p>
    <table-wrap id="table-3">
     <label>
      Table 3
     </label>
     <caption>
      <title>
       Comparative Summary of RDC Protocol Studies Key Findings and Advancements
      </title>
     </caption>
     <alternatives>
      <graphic mime-subtype="tif" mimetype="image" xlink:href="TSP_CMC_49207 - Copy-table-3.tif"/>
      <table>
       <colgroup>
        <col/>
        <col/>
        <col/>
       </colgroup>
       <thead>
        <tr>
         <th>
          Year
         </th>
         <th>
          Findings
         </th>
         <th>
          Comparison to Our Work (2023)
         </th>
        </tr>
       </thead>
       <tbody>
        <tr>
         <td>
          [6]
         </td>
         <td>
          Limited by an older Contiki version, one network topology, and did not analyse power states.
         </td>
         <td>
          Our work goes beyond by incorporating the newest Contiki version, multiple network topologies, and a thorough analysis of power states.
         </td>
        </tr>
        <tr>
         <td>
          [7]
         </td>
         <td>
          Limited by an older version of Contiki, one network topology, and lacked detailed power consumption analysis.
         </td>
         <td>
          Our research surpasses this by employing the latest Contiki version, incorporating diverse network topologies, and conducting a detailed power consumption state analysis.
         </td>
        </tr>
        <tr>
         <td>
          [8]
         </td>
         <td>
          Limited focus on two parameters (PDR and RTT) and did not consider RDC protocols.
         </td>
         <td>
          Our study extends beyond by considering various RDC protocols and conducting a detailed power analysis, providing a more comprehensive evaluation.
         </td>
        </tr>
        <tr>
         <td>
          [9]
         </td>
         <td>
          Lacked a detailed analysis of power consumption states and had a shorter simulation time.
         </td>
         <td>
          Our work addresses these limitations by conducting an in-depth study of power consumption states and extending the simulation time for a more comprehensive evaluation.
         </td>
        </tr>
        <tr>
         <td>
          [10]
         </td>
         <td>
          Primarily focused on a mesh topology and lacked detailed power state analysis.
         </td>
         <td>
          Our work expands on this by considering multiple network topologies and conducting an in-depth study of power consumption states.
         </td>
        </tr>
        <tr>
         <td>
          [11]
         </td>
         <td>
          Explored various MAC protocols with limited topologies and lacking exploration in dense network scenarios.
         </td>
         <td>
          Our work extends beyond, considering more diverse network topologies and denser network.
         </td>
        </tr>
        <tr>
         <td>
          [12]
         </td>
         <td>
          Limited to a single network topology (Grid) and lacked examination in dense network scenarios.
         </td>
         <td>
          Our work surpasses this study by incorporating various network topologies and exploring the impact of ContikiMAC in both sparse and dense network environments.
         </td>
        </tr>
       </tbody>
      </table>
     </alternatives>
    </table-wrap>
   </sec>
  </sec>
  <sec id="s8">
   <label>
    8
   </label>
   <title>
    Conclusion
   </title>
   <p>
    This paper comprehensively evaluates and analyzes the RPL routing protocol utilizing the Contiki COOJA simulator. The study encompasses the implementation of three Radio Duty Cycle protocols (RDCs) across four diverse topologies, considering various numbers of sensor nodes (10, 20, and 30). Notably, ContikiMAC demonstrated notable power savings in our results. It is more efficient due to its synchronized listening periods, which can optimize energy usage in scenarios with regular communication patterns. By synchronizing the listening periods of nodes, ContikiMAC can effectively reduce idle times and minimize unnecessary energy consumption during periods of inactivity. The impact of the number of sensor nodes on network quality was observed, indicating that an increase in nodes correlates with a decrease in network quality. The examination of node power states (LPM, TX, and RX) revealed that, across all topologies and sensor node quantities, the RX state exhibited the highest power consumption. In contrast, the LPM state consumed the least power. Interestingly, the studied topologies exhibited minimal influence on average power consumption. As part of future work, it is proposed to incorporate newer synchronous MAC layers specified in IEEE802.15.4E into this comparison. Including these layers may be particularly relevant in multi-hop networks, potentially reducing end-to-end latency resulting from improved coordination between wake-up moments along routes established by routing protocols like RPL.
   </p>
  </sec>
 </body>
 <back>
  <ack>
   <p>
    The researchers would like to acknowledge the Deanship of Scientific Research, Taif University for funding this work.
   </p>
  </ack>
  <fn-group>
   <fn fn-type="other">
    <p>
     <bold>
      Funding Statement
     </bold>
     The authors received no specific funding for this study.
    </p>
   </fn>
   <fn fn-type="other">
    <p>
     <bold>
      Author Contributions
     </bold>
     The authors confirm contribution to the paper as follows Study concept, data analysis, and writing A. Hkiri; Writing review and editing H. Faraj, O. Ben Bahri, M. Karmani; Draft manuscript preparation S. Alqurashi, H. Faraj, M. Machhout. All authors reviewed the results and approved the final version of the manuscript.
     <author-notes>
      <corresp id="cor1">
       <bold>
        Availability of Data and Materials:
       </bold>
       All data generated or analyzed during this study are included in this article and are available from the corresponding author upon reasonable request.
      </corresp>
     </author-notes>
    </p>
   </fn>
   <fn fn-type="other">
    <p>
     <bold>
      Conflicts of Interest
     </bold>
     The authors declared that they have no conflicts of interest to report regarding the present study.
    </p>
   </fn>
  </fn-group>
  <ref-list content-type="authoryear">
   <title>
    References
   </title>
   <ref id="ref-1">
    K. Gulati, R. S. K. Boddu, D . Kapila, S.L. Bangare, N. Chandnani, and G. Saravanan, "A review paper on wireless sensor network techniques in Internet of Things (IoT)," Materials Today: Proceedings, vol. 51, pp. 161-165, 2022.
   </ref>
   <ref id="ref-2">
    H.M.A. Fahmy, "WSNs applications," In Concepts, applications, experimentation and analysis of wireless sensor networks, Cham: Springer Nature Switzerland, vol. 35, no. 2, pp. 67-242, 2023.
   </ref>
   <ref id="ref-3">
    M. Y. B. Murthy, and A. Koteswararao, "Applications, merits and demerits of WSN with IoT: a detailed review," International Journal of Autonomous and Adaptive Communications Systems, vol. 17, no. 1, pp. 68-88, 2024.
   </ref>
   <ref id="ref-4">
    D. Vyas, and R. Patel, "A Survey: Specific Aspect of the RPL Protocol and its Enhancements,"  International Journal of Intelligent Systems and Applications in Engineering, vol. 12, no. 14, pp. 294-308, 2024.
   </ref>
   <ref id="ref-5">
    C. Blondia, "A queueing model for a wireless sensor node using energy harvesting," Telecommunication Systems, vol.77, no.2, pp.335-349, 2021.
   </ref>
   <ref id="ref-6">
    M. Bezunartea, M. Gamallo, J. Tiberghien, and K. Steenhaut, "How interactions between RPL and radio duty cycling protocols affect QoS in wireless sensor networks," in Proc. of the 12th ACM Symposium on QoS and Security for Wireless and Mobile Networks, New York, United States, pp. 135-138, 2016.
   </ref>
   <ref id="ref-7">
    M. P. Uwase, M. Bezunartea, J. Tiberghien, J. M. Dricot, and K. Steenhaut, "Experimental comparison of radio duty cycling protocols for wireless sensor networks," IEEE Sensors Journal, vol. 17, no.19, pp.6474-6482, 2017.
   </ref>
   <ref id="ref-8">
    V. Gokilapriya, and P. T. V. Bhuvaneswari, "Analysis of RPL routing protocol on topology control mechanism," in Proc. of the Fourth International Conference on Signal Processing, Communication and Networking (ICSCN), Chennai, India, pp. 1-5, 2017.
   </ref>
   <ref id="ref-9">
    H. Tran, M. T. Vo, and L. Mai, "A comparative performance study of RPL with different topologies and MAC protocols," in Proc. of International Conference on Advanced Technologies for Communications (ATC), Ho Chi Minh City, Vietnam, pp. 242-247, 2018.
   </ref>
   <ref id="ref-10">
    A. Y. Barnawi, G. A. Mohsen, and E. Q. Shahra, "Performance analysis of RPL protocol for data gathering applications in wireless sensor networks," Procedia Computer Science, vol. 151, no. 2018, pp.185-193.
   </ref>
   <ref id="ref-11">
    I. U. Onwuegbuzie, S. Abd Razak, and I. F. Isnin, "Performance evaluation for ContikiMAC, XMAC, CXMAC and NullMAC protocols for energy-efficient wireless sensor networks," in Proc. of IEEE Conference on Wireless Sensors (ICWiSe), Pulau Pinang, Malaysia, pp. 12-17, 2019.
   </ref>
   <ref id="ref-12">
    L. K. Karthisha, R. Mathew, S. Sahoo, and Y. R. Krishna, "ContikiMAC for Wireless Sensor Network Monitoring Application," IOSR Journal of Electronics and Communication Engineering (IOSR-JECE), vol. 15, no. 5, 2020.
   </ref>
   <ref id="ref-13">
    A. Telgote, and S. Mande, "Effect of IEEE 802.15. 4 MAC Layer on Energy Consumption for Routing Protocol for Low Power Lossy Networks (RPL)," in Proc. ICISHMC, Singapore, pp 207-220, 2023.
   </ref>
   <ref id="ref-14">
    S. S. Mouli, T. Veeraiah, and M. P. Singh, "Recent Advances of Energy and Delay Techniques in MAC Protocols that Enhances WSN Life Span: A Comprehensive Investigation," International Journal of Intelligent Systems and Applications in Engineering, vol. 12, no 4, pp. 616-634, 2024.
   </ref>
   <ref id="ref-15">
    M. Bezunartea, M. P. Uwase, J. Tiberghien, J. M. Dricot, and K. Steenhaut, "Demonstrating the versatility of a low-cost measurement testbed for Wireless Sensor Networks with a case study on Radio Duty Cycling protocols," in Proc. of EAI International Conference on Cyber-physical systems, iot and sensors Networks, Italy, Rome, pp. 222-230, 2015.
   </ref>
   <ref id="ref-16">
    A. Dunkels, "The contikimac radio duty cycle protocol," Technical Report T2011:13; Swedish Institute of Computer Science: Kista, Sweden, 2011.
   </ref>
   <ref id="ref-17">
    O. S. Contiki, "Contiki: The Open Source Operating System for the Internet of Things," Wireless Network, vol. 55, pp.1543-1559, 2018.
   </ref>
   <ref id="ref-18">
    A. Hkiri, M. Karmani, and M. Machhout, "The routing protocol for low power and lossy networks (RPL) under attack: simulation and analysis," in Proc. of 5th International Conference on Advanced Systems and Emergent Technologies (IC_ASET), pp. 143-148, 2022.
   </ref>
  </ref-list>
 </back>
</article>
